{
  "manifest": {
    "name": "postcss-calc",
    "version": "6.0.1",
    "description": "PostCSS plugin to reduce calc()",
    "keywords": [
      "css",
      "postcss",
      "postcss-plugin",
      "calculation",
      "calc"
    ],
    "main": "dist/index.js",
    "files": [
      "dist",
      "LICENSE"
    ],
    "scripts": {
      "prepublish": "npm run build && del-cli dist/__tests__",
      "build": "del-cli dist && cross-env BABEL_ENV=publish babel src --out-dir dist",
      "pretest": "eslint src && npm run build",
      "test": "ava src/__tests__/"
    },
    "author": {
      "name": "Maxime Thirouin"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/postcss/postcss-calc.git"
    },
    "eslintConfig": {
      "parser": "babel-eslint",
      "extends": "eslint-config-i-am-meticulous"
    },
    "devDependencies": {
      "ava": "^0.19.1",
      "babel-cli": "^6.18.0",
      "babel-core": "^6.21.0",
      "babel-eslint": "^7.1.1",
      "babel-plugin-add-module-exports": "^0.2.1",
      "babel-preset-env": "^1.4.0",
      "babel-register": "^6.18.0",
      "cross-env": "^4.0.0",
      "del-cli": "^0.2.1",
      "eslint": "^3.12.2",
      "eslint-config-i-am-meticulous": "^6.0.1",
      "eslint-plugin-babel": "^4.0.0",
      "eslint-plugin-import": "^2.2.0"
    },
    "dependencies": {
      "css-unit-converter": "^1.1.1",
      "postcss": "^6.0.0",
      "postcss-selector-parser": "^2.2.2",
      "reduce-css-calc": "^2.0.0"
    },
    "ava": {
      "require": "babel-register"
    },
    "_registry": "npm",
    "_loc": "/home/node/.cache/yarn/v1/npm-postcss-calc-6.0.1-3d24171bbf6e7629d422a436ebfe6dd9511f4330/package.json",
    "readmeFilename": "README.md",
    "readme": "# postcss-calc [![Build Status](https://travis-ci.org/postcss/postcss-calc.png)](https://travis-ci.org/postcss/postcss-calc)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin to reduce `calc()`.\n\nThis plugin reduce `calc()` references whenever it's possible.\nThis can be particularly useful with the [postcss-custom-properties](https://github.com/postcss/postcss-custom-properties) plugin.\n\n**Note:** When multiple units are mixed together in the same expression, the `calc()` statement is left as is, to fallback to the [w3c calc() feature](http://www.w3.org/TR/css3-values/#calc).\n\n## Installation\n\n```console\n$ npm install postcss-calc\n```\n\n## Usage\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar calc = require(\"postcss-calc\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(calc())\n  .process(css)\n  .css\n```\n\n**Example** (with [postcss-custom-properties](https://github.com/postcss/postcss-custom-properties) enabled as well):\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar customProperties = require(\"postcss-custom-properties\")\nvar calc = require(\"postcss-calc\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(customProperties())\n  .use(calc())\n  .process(css)\n  .css\n```\n\nUsing this `input.css`:\n\n```css\n:root {\n  --main-font-size: 16px;\n}\n\nbody {\n  font-size: var(--main-font-size);\n}\n\nh1 {\n  font-size: calc(var(--main-font-size) * 2);\n  height: calc(100px - 2em);\n  margin-bottom: calc(\n      var(--main-font-size)\n      * 1.5\n    )\n}\n```\n\nyou will get:\n\n```css\nbody {\n  font-size: 16px\n}\n\nh1 {\n  font-size: 32px;\n  height: calc(100px - 2em);\n  margin-bottom: 24px\n}\n```\n\nCheckout [tests](test) for more examples.\n\n### Options\n\n#### `precision` (default: `5`)\n\nAllow you to define the precision for decimal numbers.\n\n```js\nvar out = postcss()\n  .use(calc({precision: 10}))\n  .process(css)\n  .css\n```\n\n#### `preserve` (default: `false`)\n\nAllow you to preserve calc() usage in output so browsers will handle decimal precision themselves.\n\n```js\nvar out = postcss()\n  .use(calc({preserve: true}))\n  .process(css)\n  .css\n```\n\n#### `warnWhenCannotResolve` (default: `false`)\n\nAdds warnings when calc() are not reduced to a single value.\n\n```js\nvar out = postcss()\n  .use(calc({warnWhenCannotResolve: true}))\n  .process(css)\n  .css\n```\n\n#### `mediaQueries` (default: `false`)\n\nAllows calc() usage as part of media query declarations.\n\n```js\nvar out = postcss()\n  .use(calc({mediaQueries: true}))\n  .process(css)\n  .css\n```\n\n#### `selectors` (default: `false`)\n\nAllows calc() usage as part of selectors.\n\n```js\nvar out = postcss()\n  .use(calc({selectors: true}))\n  .process(css)\n  .css\n```\n\nExample:\n\n```css\ndiv[data-size=\"calc(3*3)\"] {\n  width: 100px;\n}\n```\n\n---\n\n## Contributing\n\nWork on a branch, install dev-dependencies, respect coding style & run tests before submitting a bug fix or a feature.\n\n```console\n$ git clone https://github.com/postcss/postcss-calc.git\n$ git checkout -b patch-1\n$ npm install\n$ npm test\n```\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 Maxime Thirouin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-calc/-/postcss-calc-6.0.1.tgz#3d24171bbf6e7629d422a436ebfe6dd9511f4330",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-calc/-/postcss-calc-6.0.1.tgz",
    "hash": "3d24171bbf6e7629d422a436ebfe6dd9511f4330",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "3d24171bbf6e7629d422a436ebfe6dd9511f4330"
}